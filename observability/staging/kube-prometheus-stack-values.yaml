---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  chart:
    spec:
      version: ">=14.3.0"
  values:
    commonLabels:
      tier: cluster
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    grafana:
      podLabels:
        app: grafana
      service:
        labels:
          app: grafana
      grafana.ini:
        server:
          root_url: http://grafana.demo.lab
      additionalDataSources:
        - name: Tempo
          type: tempo
          access: proxy
          uid: tempo_ds
          url: http://tempo:16686
        - name: Loki
          type: loki
          access: proxy
          uid: loki_ds
          url: http://loki-stack:3100
          jsonData:
            maxLines: 1000
            derivedFields:
              - datasourceUid: tempo_ds
                matchrRegex: "traceID=(\\w+)"
                name: TraceID
                url: "$${__value.raw}"
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'flux'
            orgId: 1
            folder: 'Flux'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/flux
      dashboards:
        flux:
          cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
            token: ''
          control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
            token: ''
    alertmanager:
      serviceMonitor:
        scheme: "https"
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          keyFile: /etc/prom-certs/key.pem
          insecureSkipVerify: true
      alertmanagerSpec:
        externalUrl: http://alertmanager.demo.lab
    prometheus:
      annotations:
        traffic.sidecar.istio.io/includeInboundPorts: ""
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""
        proxy.istio.io/config: |
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
      thanosService:
        enabled: true
      prometheusSpec:
        ## Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
        ## Metadata Labels and Annotations gets propagated to the prometheus pods.
        ##
        podMetadata:
          annotations:
            traffic.sidecar.istio.io/excludeOutboundPorts: "10901"
            traffic.sidecar.istio.io/excludeInboundPorts: "10901"
        externalLabels:
          cluster: demolab
          environment: staging
        externalUrl: http://prometheus.demo.lab
        volumes:
          - emptyDir:
              medium: Memory
            name: istio-certs
        volumeMounts:
          - mountPath: /etc/prom-certs/
            name: istio-certs
        thanos:
          baseImage: quay.io/thanos/thanos
          version: v0.19.0
          listenLocal: true # we need this since we're using istio
        ruleSelector:
          matchLabels:
            tier: cluster
        serviceMonitorSelector:
          matchLabels:
            tier: cluster
        additionalScrapeConfigs:
          - job_name: 'istiod'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istiod;http-monitoring
          - job_name: 'envoy-stats'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_container_port_name]
              action: keep
              regex: '.*-envoy-prom'
      additionalPodMonitors:
        - name: source-controller
          additionalLabels:
            tier: cluster
          selector:
            matchLabels:
              app: source-controller
          namespaceSelector:
            matchNames:
              - flux-system
          podMetricsEndpoints:
            - port: http-prom
        - name: kustomize-controller
          additionalLabels:
            tier: cluster
          selector:
            matchLabels:
              app: kustomize-controller
          namespaceSelector:
            matchNames:
              - flux-system
          podMetricsEndpoints:
            - port: http-prom
        - name: helm-controller
          additionalLabels:
            tier: cluster
          selector:
            matchLabels:
              app: helm-controller
          namespaceSelector:
            matchNames:
              - flux-system
          podMetricsEndpoints:
            - port: http-prom
        - name: notification-controller
          additionalLabels:
            tier: cluster
          selector:
            matchLabels:
              app: notification-controller
          namespaceSelector:
            matchNames:
              - flux-system
          podMetricsEndpoints:
            - port: http-prom