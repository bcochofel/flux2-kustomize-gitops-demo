---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: "14.3.0"
  interval: 1h0m0s
  install:
    remediation:
      retries: 3
  values:
    commonLabels:
      tier: cluster
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
     enabled: false
    grafana:
      podLabels:
        app: grafana
      service:
        labels:
          app: grafana
      serviceMonitor:
        enabled: true
        labels:
          tier: cluster
      grafana.ini:
        server:
          root_url: http://grafana.demo.lab
    alertmanager:
      alertmanagerSpec:
        externalUrl: http://alertmanager.demo.lab
    prometheus:
      prometheusSpec:
        externalUrl: http://prometheus.demo.lab
        ruleSelector:
          matchLabels:
            tier: cluster
        serviceMonitorSelector:
          matchLabels:
            tier: cluster
#    prometheus:
#      annotations:
#        traffic.sidecar.istio.io/includeInboundPorts: ""   # do not intercept any inbound ports
#        traffic.sidecar.istio.io/includeOutboundIPRanges: ""  # do not intercept any outbound traffic
#        proxy.istio.io/config: |  # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder
#          proxyMetadata:
#            OUTPUT_CERTS: /etc/istio-output-certs
#        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]' # mount the shared volume at sidecar proxy
#      prometheusSpec:
#        volumes:
#          - emptyDir:
#              medium: Memory
#            name: istio-certs
#        volumeMounts:
#          - mountPath: /etc/prom-certs/
#            name: istio-certs
##      serviceMonitor:
##        scheme: https
##        tlsConfig:
##          caFile: /etc/prom-certs/root-cert.pem
##          certFile: /etc/prom-certs/cert-chain.pem
##          keyFile: /etc/prom-certs/key.pem
##          insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod ceritifcate
#